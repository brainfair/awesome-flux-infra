apiVersion: operator.victoriametrics.com/v1beta1
kind: VMRule
metadata:
  name: vmrule-cluster-autoscaler
spec:
  groups:
  - name: cluster-autoscaler
    rules:
    - alert: ClusterAutoscalerUnschedulablePods
      expr: cluster_autoscaler_unschedulable_pods_count{service="cluster-autoscaler"} > 0
      for: 20m
      labels:
        severity: info
      annotations:
        summary: Cluster Autoscaler has {{ "{{ $value }}" }} unschedulable pods
        description: The cluster autoscaler is unable to scale up and is alerting that there are unschedulable pods because of this condition. This may be caused by the cluster autoscaler reaching its resources limits, or by Kubernetes waiting for new nodes to become ready.
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md

    - alert: ClusterAutoscalerNotSafeToScale
      expr: cluster_autoscaler_cluster_safe_to_autoscale{service="cluster-autoscaler"} !=1
      for: 15m
      labels:
        severity: warning
      annotations:
        summary: Cluster Autoscaler is reporting that the cluster is not ready for scaling
        description: The cluster autoscaler has detected that the number of unready nodes is too high and it is not safe to continute scaling operations. It makes this determination by checking that the number of ready nodes is greater than the minimum ready count (default of 3) and the ratio of unready to ready nodes is less than the maximum unready node percentage (default of 45%). If either of those conditions are not true then the cluster autoscaler will enter an unsafe to scale state until the conditions change.
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md

    - alert: ClusterAutoscalerUnableToScaleCPULimitReached
      expr: cluster_autoscaler_cluster_cpu_current_cores >= cluster_autoscaler_cpu_limits_cores{direction="maximum"}
      for: 15m
      labels:
        severity: info
      annotations:
        summary: Cluster Autoscaler has reached its CPU core limit and is unable to scale out
        description: The number of total cores in the cluster has exceeded the maximum number set on the cluster autoscaler. This is calculated by summing the cpu capacity for all nodes in the cluster and comparing that number against the maximum cores value set for the cluster autoscaler (default 320000 cores). 
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md

    - alert: ClusterAutoscalerUnableToScaleMemoryLimitReached
      expr: cluster_autoscaler_cluster_memory_current_bytes >= cluster_autoscaler_memory_limits_bytes{direction="maximum"}
      for: 15m
      labels:
        severity: info
      annotations:
        summary: Cluster Autoscaler has reached its Memory bytes limit and is unable to scale out
        description: The number of total bytes of RAM in the cluster has exceeded the maximum number set on the cluster autoscaler. This is calculated by summing the memory capacity for all nodes in the cluster and comparing that number against the maximum memory bytes value set for the cluster autoscaler (default 6400000 gigabytes). 
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md

    - alert: ClusterAutoscalerErrorsTotal
      expr: rate(cluster_autoscaler_errors_total[5m]) != 0
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: Cluster Autoscaler has encountered error(s)
        description: Cluster Autoscaler has encountered errors.
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md
    
    - alert: ClusterAutoscalerFailedSclaleUpsTotal
      expr: rate(cluster_autoscaler_failed_scale_ups_total[5m]) != 0
      for: 1m
      labels:
        severity: info
      annotations:
        summary: Cluster Autoscaler has failed to scale up
        description: Cluster Autoscaler has failed to scale up. This includes both getting error from cloud provider and new nodes failing to boot up and register within timeout. It does not include reaching maximum cluster size (as CA doesn't attempt scale-up at all in that case).
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md
    
    - alert: ClusterAutoscalerSkippedScaleEventsCount
      expr: rate(cluster_autoscaler_skipped_scale_events_count[5m]) != 0
      for: 15m
      labels:
        severity: info
      annotations:
        summary: Cluster Autoscaler has declined to scale cluster
        description: Cluster Autoscaler has declined to scale a node group because of a resource limit being reached or similar internal event.
        runbook_url: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/metrics.md