apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics-k8s-stack
  namespace: monitoring
spec:
  interval: 15m
  timeout: 15m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      sourceRef:
        kind: HelmRepository
        name: vm
      interval: 5m
  releaseName: victoria-metrics-k8s-stack
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    crds: Skip
    remediation:
      retries: 3
  # additional values file with KSM values
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  # Default values: https://github.com/VictoriaMetrics/helm-charts/blob/master/charts/victoria-metrics-k8s-stack/values.yaml
  values:
    ## disable vm operator crds, managed separetly by gitops-crds repo
    crds:
      enabled: false
    victoria-metrics-operator:
      admissionWebhooks:
        enable: false
      crd:
        create: false
        cleanup:
          enabled: true
      operator:
        disable_prometheus_converter: false
        enable_converter_ownership: true
      # resources:
      #   limits:
      #     memory: 100Mi
      #   requests:
      #     cpu: 14m
      #     memory: 100Mi
    kube-state-metrics:
      prometheusScrape: false
      selfMonitor:
        enabled: true
      # resources:
      #   limits:
      #     memory: 500Mi
      #   requests:
      #     cpu: 10m
      #     memory: 350Mi
      # affinity:
      #   podAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: app.kubernetes.io/name
      #               operator: In
      #               values:
      #                 - vmsingle
      #         topologyKey: failure-domain.beta.kubernetes.io/zone
      vmServiceScrape:
        spec:
          endpoints:
            - port: http
              honorLabels: true
              metricRelabelConfigs:
                - action: labeldrop
                  regex: (uid|container_id|image_id)
            - port: metrics
              honorLabels: true
              metricRelabelConfigs:
                - action: labeldrop
                  regex: (uid|container_id|image_id)
          jobLabel: app.kubernetes.io/name
    grafana:
      assertNoLeakedSecrets: false
      # resources:
      #   limits:
      #     memory: 200Mi
      #   requests:
      #     cpu: 19m
      #     memory: 200Mi
      sidecar:
        datasources:
          searchNamespace: ALL
        dashboards:
          searchNamespace: ALL
        # resources:
        #   limits:
        #     memory: 150Mi
        #   requests:
        #     cpu: 10m
        #     memory: 150Mi
      plugins:
        - https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
        - victoriametrics-logs-datasource
      grafana.ini:
        server:
          root_url: https://grafana.${cluster_subdomain}
        users:
          auto_assign_org_role: "Editor"
        auth.anonymous:
          enabled: true
          org_name: "Main Org."
          org_role: "Viewer"
          hide_version: true
      ingress:
        hosts:
          - grafana.${cluster_subdomain}
      # dashboards:
      #   default:
      #     istio-mesh-dashboard:
      #       gnetId: 7639
      #       revision: 194
      #       datasource: VictoriaMetrics
      #     istio-service-dashboard:
      #       gnetId: 7636
      #       revision: 194
      #       datasource: VictoriaMetrics
      #     istio-workload-dashboard:
      #       gnetId: 7630
      #       revision: 194
      #       datasource: VictoriaMetrics
      #     istio-performance-dashboard:
      #       gnetId: 11829
      #       revision: 194
      #       datasource: VictoriaMetrics
      #     istio-control-plane-dashboard:
      #       gnetId: 7645
      #       revision: 194
      #       datasource: VictoriaMetrics
      #     istio-wasm-dashboard:
      #       gnetId: 13277
      #       revision: 151
      #       datasource: VictoriaMetrics
    prometheus-node-exporter:
      enabled: true
    kubeProxy:
      enabled: true
      vmScrape:
        spec:
          jobLabel: jobLabel
          namespaceSelector:
            matchNames: [kube-system]
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: http-metrics
              scheme: http
    kubeScheduler:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    defaultRules:
      rules:
        TooManyScrapeErrors:
          create: false
        TooHighChurnRate24h:
          create: false
        KubeHpaMaxedOut:
          create: false
        KubeMemoryOvercommit:
          create: false
      groups:
        etcd:
          create: false
        vmcluster:
          create: false
    vmsingle:
      spec:
        retentionPeriod: "7d"
        extraArgs:
          maxLabelsPerTimeseries: "40"
          search.maxUniqueTimeseries: "500000"
        # resources:
        #   limits:
        #     memory: "300Mi"
        #   requests:
        #     cpu: 300m
        #     memory: "300Mi"
        # storage:
        #   resources:
        #     requests:
        #       storage: 10Gi
    vmagent:
      spec:
        # affinity:
        #   podAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #       - labelSelector:
        #           matchExpressions:
        #             - key: app.kubernetes.io/name
        #               operator: In
        #               values:
        #                 - vmsingle
        #         topologyKey: failure-domain.beta.kubernetes.io/zone
        externalLabels:
          cluster: ${cluster_name}
        extraArgs:
          promscrape.maxScrapeSize: "33554432"
        # resources:
        #   limits:
        #     memory: "500Mi"
        #   requests:
        #     cpu: 87m
        #     memory: "500Mi"
        ## istio hack for scraping pods from with istio mesh strict mtls
        podMetadata:
          annotations:
            proxy.istio.io/config: |-
              proxyMetadata:
                OUTPUT_CERTS: /etc/istio-certs/
            sidecar.istio.io/inject: "true"
            sidecar.istio.io/rewriteAppHTTPProbers: "true"
            sidecar.istio.io/userVolume: '[{"name": "istio-certs", "emptyDir": {"medium": "Memory"}}]'
            sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-certs/"}]'
            traffic.sidecar.istio.io/includeOutboundIPRanges: ""
        volumeMounts:
          - mountPath: /etc/istio-certs/
            name: istio-certs
            readOnly: true
        volumes:
          - emptyDir:
              medium: Memory
            name: istio-certs
    vmalert:
      spec:
        # affinity:
        #   podAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #       - labelSelector:
        #           matchExpressions:
        #             - key: app.kubernetes.io/name
        #               operator: In
        #               values:
        #                 - vmsingle
        #         topologyKey: failure-domain.beta.kubernetes.io/zone
        extraArgs:
          external.url: "https://vmalert.${cluster_subdomain}"
        # resources:
        #   limits:
        #     memory: "250Mi"
        #   requests:
        #     cpu: 35m
        #     memory: "250Mi"
    alertmanager:
      spec:
        disableNamespaceMatcher: true
        externalURL: "https://vmalertmanager.${cluster_subdomain}"
        # resources:
        #   limits:
        #     memory: "200Mi"
        #   requests:
        #     cpu: 10m
        #     memory: "200Mi"
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ["alertgroup", "job"]
          group_wait: 30s
          group_interval: 6m
          repeat_interval: 12h
          receiver: "null"
          routes:
            - receiver: "null"
              matchers:
                - alertname = "Watchdog"
            - receiver: "null"
              matchers:
                - alertname = "InfoInhibitor"
        inhibit_rules:
          - target_matchers:
              - severity=~"warning|info"
            source_matchers:
              - severity=critical
            equal:
              - cluster
              - namespace
              - alertname
          - target_matchers:
              - severity=info
            source_matchers:
              - severity=warning
            equal:
              - cluster
              - namespace
              - alertname
          - target_matchers:
              - severity=info
            source_matchers:
              - alertname=InfoInhibitor
            equal:
              - cluster
              - namespace
        receivers:
          - name: "null"
